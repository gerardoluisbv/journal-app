# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Firebase CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm install -g yarn
    - name: yarn install, build and test
      run: |
        yarn install
        yarn build
    - name: Archive Build
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: build
        
  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download Build
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          REACT_APP_APIKEY: $ {{ secrets.REACT_APP_APIKEY }}
          REACT_APP_AUTHDOMAIN: $ {{ secrets.REACT_APP_AUTHDOMAIN }}
          REACT_APP_PROJECTID: $ {{ secrets.REACT_APP_PROJECTID }}
          REACT_APP_STORAGEBUCKET: $ {{ secrets.REACT_APP_STORAGEBUCKET }}
          REACT_APP_MESSAGINGSENDERID: $ {{ secrets.REACT_APP_MESSAGINGSENDERID }}
          REACT_APP_APPID: $ {{ secrets.REACT_APP_APPID }}
          
          
